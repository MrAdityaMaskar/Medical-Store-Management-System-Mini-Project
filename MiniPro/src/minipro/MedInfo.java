/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package minipro;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
//import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aditya
 */
public class MedInfo extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public MedInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sample = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        T_medical = new javax.swing.JTable();
        med_name = new javax.swing.JTextField();
        ID = new javax.swing.JLabel();
        med_address = new javax.swing.JTextField();
        med_id = new javax.swing.JTextField();
        med_owner = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        Address = new javax.swing.JLabel();
        Owner = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        status_final = new javax.swing.JTextArea();
        update = new javax.swing.JButton();
        p_update = new javax.swing.JTextField();
        q_update = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ID1 = new javax.swing.JLabel();
        med_id1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sample.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        sample.setText("Medical Info");
        sample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleActionPerformed(evt);
            }
        });

        T_medical.setBackground(new java.awt.Color(204, 204, 255));
        T_medical.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        T_medical.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        T_medical.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "medical_id", "medical_name", "medical_address", "medical_owner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        T_medical.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        T_medical.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        T_medical.setDropMode(javax.swing.DropMode.ON);
        T_medical.setSelectionBackground(new java.awt.Color(0, 0, 0));
        T_medical.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(T_medical);
        T_medical.getAccessibleContext().setAccessibleParent(T_medical);

        med_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                med_nameActionPerformed(evt);
            }
        });

        ID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ID.setText("Medical ID");

        Name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Name.setText("Medical Name");

        Address.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Address.setText("Medical Address");

        Owner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Owner.setText("Medical Owner");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reset.setText("Reset All");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        status_final.setColumns(20);
        status_final.setRows(5);
        jScrollPane2.setViewportView(status_final);

        update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Column Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("New Value");

        ID1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ID1.setText("Medical ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Address)
                                    .addComponent(Owner)
                                    .addComponent(Name)
                                    .addComponent(ID))
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(med_address, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(med_owner, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(med_id, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(med_name, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(reset)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ID1)
                            .addComponent(jLabel2))
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(q_update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(p_update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(med_id1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGap(687, 687, 687)
                .addComponent(sample)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(med_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sample)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(med_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Name))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(med_address, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Address)
                            .addComponent(p_update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(med_owner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Owner)
                            .addComponent(q_update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ID1)
                        .addComponent(med_id1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(151, 151, 151))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleActionPerformed
        try{
            
            
            T_medical.setModel(new DefaultTableModel(
   new Object [][] {
                    
                   }, new String [] {"medical_id", "medical_name", "medical_address", "medical_owner"}
                ));
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");
            
            Statement st = cn.createStatement();
            String qurry = "select * from medical";
            ResultSet rs = st.executeQuery(qurry);
            
            
            while(rs.next()){
                String medical_id = String.valueOf(rs.getInt("medical_id"));
                String medical_name = String.valueOf(rs.getString("medical_name"));
                String medical_address = String.valueOf(rs.getString("medical_address"));
                String medical_owner = String.valueOf(rs.getString("medical_owner"));
                
                String TBdata[] = {medical_id, medical_name,medical_address,medical_owner};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st.close();
            
            
        }
        
        catch(Exception e){
            
            System.out.print(e);
        }


    }//GEN-LAST:event_sampleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            int r = Integer.parseInt(med_id.getText());
            String a = med_name.getText();
            String b = med_address.getText();
            String c = med_owner.getText();
            
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");
            
            Statement st = cn.createStatement();
            st.executeUpdate("insert into medical values("+r+",'"+a+"','"+b+"','"+c+"')");
            
            med_id.setText(null);
            med_name.setText(null);
            med_address.setText(null);
            med_owner.setText(null);
         
            status_final.setText("Inserted");
            
            T_medical.setModel(new DefaultTableModel(
   new Object [][] {
                    
                   }, new String [] {"medical_id", "medical_name", "medical_address", "medical_owner"}
                ));
            
            
            
            Statement st1 = cn.createStatement();
            String qurry = "select * from medical";
            ResultSet rs = st1.executeQuery(qurry);
            
            
            
            while(rs.next()){
                String medical_id = String.valueOf(rs.getInt("medical_id"));
                String medical_name = String.valueOf(rs.getString("medical_name"));
                String medical_address = String.valueOf(rs.getString("medical_address"));
                String medical_owner = String.valueOf(rs.getString("medical_owner"));
                
                String TBdata[] = {medical_id, medical_name,medical_address,medical_owner};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();
            
            
        }
        
        catch(Exception e){
            
            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void med_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_med_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_med_nameActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        
        med_id.setText(null);
        med_name.setText(null);
        med_address.setText(null);
        med_owner.setText(null);
        
        status_final.setText(null);
        
        
        
        
        
        
        T_medical.setModel(new DefaultTableModel(
   new Object [][] {
                    
                   }, new String [] {"medical_id", "medical_name", "medical_address", "medical_owner"}
                ));
    }//GEN-LAST:event_resetActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            int r = Integer.parseInt(med_id.getText());
            String n = med_name.getText();
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");
            
            Statement st = cn.createStatement();
            st.executeUpdate("delete from medical where medical_id="+r+"");
            status_final.setText("Deleted");
            
            T_medical.setModel(new DefaultTableModel(
   new Object [][] {
                    
                   }, new String [] {"medical_id", "medical_name", "medical_address", "medical_owner"}
                ));
            
             
            Statement st1 = cn.createStatement();
            String qurry = "select * from medical";
            ResultSet rs = st1.executeQuery(qurry);
            
            
            
            while(rs.next()){
                String medical_id = String.valueOf(rs.getInt("medical_id"));
                String medical_name = String.valueOf(rs.getString("medical_name"));
                String medical_address = String.valueOf(rs.getString("medical_address"));
                String medical_owner = String.valueOf(rs.getString("medical_owner"));
                
                String TBdata[] = {medical_id, medical_name,medical_address,medical_owner};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();
            
            
        }
        
        catch(Exception e){
            
            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try{
            int r = Integer.parseInt(med_id1.getText());
            String p = p_update.getText();
            String q = q_update.getText();
            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");
            
            Statement st = cn.createStatement();
            st.executeUpdate("update medical set "+p+"='"+q+"' where medical_id="+r+"");
            med_id1.setText(null);
            p_update.setText(null);
            q_update.setText(null);
            
            status_final.setText("Updated");
            
            T_medical.setModel(new DefaultTableModel(
   new Object [][] {
                    
                   }, new String [] {"medical_id", "medical_name", "medical_address", "medical_owner"}
                ));
            
             
            Statement st1 = cn.createStatement();
            String qurry = "select * from medical";
            ResultSet rs = st1.executeQuery(qurry);
            
            
            
            while(rs.next()){
                String medical_id = String.valueOf(rs.getInt("medical_id"));
                String medical_name = String.valueOf(rs.getString("medical_name"));
                String medical_address = String.valueOf(rs.getString("medical_address"));
                String medical_owner = String.valueOf(rs.getString("medical_owner"));
                
                String TBdata[] = {medical_id, medical_name,medical_address,medical_owner};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();
            
            
        }
        
        catch(Exception e){
            
            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Address;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel ID1;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Owner;
    private javax.swing.JTable T_medical;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField med_address;
    private javax.swing.JTextField med_id;
    private javax.swing.JTextField med_id1;
    private javax.swing.JTextField med_name;
    private javax.swing.JTextField med_owner;
    private javax.swing.JTextField p_update;
    private javax.swing.JTextField q_update;
    private javax.swing.JButton reset;
    private javax.swing.JButton sample;
    private javax.swing.JTextArea status_final;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
