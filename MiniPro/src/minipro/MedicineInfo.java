/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package minipro;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aditya
 */
public class MedicineInfo extends javax.swing.JFrame {

    /**
     * Creates new form MedicineInfo
     */
    public MedicineInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        T_medical = new javax.swing.JTable();
        m_cost = new javax.swing.JTextField();
        ID = new javax.swing.JLabel();
        m_type = new javax.swing.JTextField();
        m_id = new javax.swing.JTextField();
        mfg_date = new javax.swing.JTextField();
        q_update = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        Address = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Owner1 = new javax.swing.JLabel();
        Owner = new javax.swing.JLabel();
        exp_date = new javax.swing.JTextField();
        ID1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        m_id1 = new javax.swing.JTextField();
        ID2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        m_name = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        status_final = new javax.swing.JTextArea();
        update = new javax.swing.JButton();
        p_update = new javax.swing.JTextField();
        sample = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        T_medical.setBackground(new java.awt.Color(204, 204, 255));
        T_medical.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        T_medical.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        T_medical.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date", "EXP Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        T_medical.setToolTipText("");
        T_medical.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        T_medical.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        T_medical.setDropMode(javax.swing.DropMode.ON);
        T_medical.setSelectionBackground(new java.awt.Color(0, 0, 0));
        T_medical.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(T_medical);

        m_cost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_costActionPerformed(evt);
            }
        });

        ID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ID.setText("Medicine ID");

        Name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Name.setText("Medicine Cost");

        Address.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Address.setText("Medicine Type");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Column Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("New Value");

        Owner1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Owner1.setText("Exp Date");

        Owner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Owner.setText("MFG Date");

        exp_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp_dateActionPerformed(evt);
            }
        });

        ID1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ID1.setText("Medicine ID");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ID2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ID2.setText("Medicine Name");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reset.setText("Reset All");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        status_final.setColumns(20);
        status_final.setRows(5);
        jScrollPane2.setViewportView(status_final);

        update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        sample.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        sample.setText("Medicine Info");
        sample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(619, 619, 619)
                                .addComponent(sample))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(reset)))
                        .addContainerGap(717, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ID)
                                    .addComponent(ID2))
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(m_name, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(m_id)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Address)
                                    .addComponent(Owner)
                                    .addComponent(Name)
                                    .addComponent(Owner1))
                                .addGap(130, 130, 130)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exp_date)
                                    .addComponent(mfg_date)
                                    .addComponent(m_type)
                                    .addComponent(m_cost))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(194, 194, 194)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(ID1)
                                    .addComponent(jLabel2))
                                .addGap(129, 129, 129)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(q_update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(p_update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(m_id1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(sample)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(p_update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(q_update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ID1)
                                .addComponent(m_id1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID)
                            .addComponent(m_id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID2)
                            .addComponent(m_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(m_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Name))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(m_type, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Address))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mfg_date, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Owner))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exp_date, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Owner1))
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_costActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_costActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m_costActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{

            int a = Integer.parseInt(m_id.getText());
            String b = m_name.getText();
            int c = Integer.parseInt(m_cost.getText());

            
            String d = m_type.getText();
            String e = mfg_date.getText();
            String f = exp_date.getText();
           

            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");

            Statement st = cn.createStatement();
            st.executeUpdate("insert into medicine values("+a+",'"+b+"',"+c+",'"+d+"','"+e+"','"+f+"')");

            m_id.setText(null);
            m_cost.setText(null);
            m_type.setText(null);
            mfg_date.setText(null);
            exp_date.setText(null);
           
            m_name.setText(null);

            status_final.setText("Inserted");

            T_medical.setModel(new DefaultTableModel(
                new Object [][] {

                }, new String [] {"Medicine ID","Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date","EXP Date"}
            ));

            Statement st1 = cn.createStatement();
            String qurry = "select * from medicine";
            ResultSet rs = st1.executeQuery(qurry);

            while(rs.next()){
                String m_id = String.valueOf(rs.getInt("med_id"));
                String m_name = String.valueOf(rs.getString("med_name"));
                String m_cost = String.valueOf(rs.getFloat("med_cost"));
                
                String med_type = String.valueOf(rs.getString("med_type"));
                String mfg_date = String.valueOf(rs.getString("mfg_date"));
                String exp_date = String.valueOf(rs.getString("exp_date"));
               
                String TBdata[] = {m_id,m_name,m_cost,med_type,mfg_date,exp_date};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();

        }

        catch(Exception e){

            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            int r = Integer.parseInt(m_id.getText());
            String n = m_cost.getText();

            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");

            Statement st = cn.createStatement();
            st.executeUpdate("delete from medicine where med_id="+r+"");

            m_id.setText(null);
            m_cost.setText(null);
            m_type.setText(null);
            mfg_date.setText(null);
            exp_date.setText(null);
           
            m_name.setText(null);

            status_final.setText("Deleted");

            T_medical.setModel(new DefaultTableModel(
                new Object [][] {

                }, new String [] {"Medicine ID","Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date","EXP Date"}
            ));

            Statement st1 = cn.createStatement();
            String qurry = "select * from medicine";
            ResultSet rs = st1.executeQuery(qurry);

            while(rs.next()){
                String m_id = String.valueOf(rs.getInt("med_id"));
                String m_name = String.valueOf(rs.getString("med_name"));
                String m_cost = String.valueOf(rs.getFloat("med_cost"));
                
                String med_type = String.valueOf(rs.getString("med_type"));
                String mfg_date = String.valueOf(rs.getString("mfg_date"));
                String exp_date = String.valueOf(rs.getString("exp_date"));
               
                String TBdata[] = {m_id,m_name,m_cost,med_type,mfg_date,exp_date};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();

        }

        catch(Exception e){

            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed

        m_id.setText(null);
        m_cost.setText(null);
        m_type.setText(null);
        mfg_date.setText(null);
        exp_date.setText(null);
        
        m_name.setText(null);
        m_id1.setText(null);
        p_update.setText(null);
        q_update.setText(null);

        status_final.setText(null);

        T_medical.setModel(new DefaultTableModel(
            new Object [][] {

            }, new String [] {"Medicine ID","Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date","EXP Date"}
        ));
    }//GEN-LAST:event_resetActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try{
            int r = Integer.parseInt(m_id1.getText());
            String p = p_update.getText();
            String q = q_update.getText();
            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");

            Statement st = cn.createStatement();
            st.executeUpdate("update medicine set "+p+"='"+q+"' where med_id="+r+"");
            m_id1.setText(null);
            p_update.setText(null);
            q_update.setText(null);

            status_final.setText("Updated");

            T_medical.setModel(new DefaultTableModel(
                new Object [][] {

                }, new String [] {"Medicine ID","Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date","EXP Date"}
            ));

            Statement st1 = cn.createStatement();
            String qurry = "select * from medicine";
            ResultSet rs = st1.executeQuery(qurry);

            while(rs.next()){
                String m_id = String.valueOf(rs.getInt("med_id"));
                String m_name = String.valueOf(rs.getString("med_name"));
                String m_cost = String.valueOf(rs.getFloat("med_cost"));
                
                String med_type = String.valueOf(rs.getString("med_type"));
                String mfg_date = String.valueOf(rs.getString("mfg_date"));
                String exp_date = String.valueOf(rs.getString("exp_date"));
               
                String TBdata[] = {m_id,m_name,m_cost,med_type,mfg_date,exp_date};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);
            }
            st1.close();

        }

        catch(Exception e){

            status_final.setText(String.valueOf(e));
        }
    }//GEN-LAST:event_updateActionPerformed

    private void sampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleActionPerformed
        try{

            T_medical.setModel(new DefaultTableModel(
                new Object [][] {

                }, new String [] {"Medicine ID","Medicine Name", "Medicine Cost", "Medicine Type", "MFG Date","EXP Date"}
            ));

            Class.forName("com.mysql.cj.jdbc.Driver");
            String p1="jdbc:mysql://localhost/miniproject";
            Connection cn = DriverManager.getConnection(p1,"root","01092001");

            Statement st = cn.createStatement();
            String qurry = "select * from medicine";
            ResultSet rs = st.executeQuery(qurry);

            while(rs.next()){
                String m_id = String.valueOf(rs.getInt("med_id"));
                String m_name = String.valueOf(rs.getString("med_name"));
                String m_cost = String.valueOf(rs.getFloat("med_cost"));
                
                String med_type = String.valueOf(rs.getString("med_type"));
                String mfg_date = String.valueOf(rs.getString("mfg_date"));
                String exp_date = String.valueOf(rs.getString("exp_date"));
               
                String TBdata[] = {m_id,m_name,m_cost,med_type,mfg_date,exp_date};
                DefaultTableModel tb1Model = (DefaultTableModel)T_medical.getModel();
                tb1Model.addRow(TBdata);

            }

        }

        catch(Exception e){

            System.out.print(e);
        }
    }//GEN-LAST:event_sampleActionPerformed

    private void exp_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exp_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicineInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Address;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel ID1;
    private javax.swing.JLabel ID2;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Owner;
    private javax.swing.JLabel Owner1;
    private javax.swing.JTable T_medical;
    private javax.swing.JTextField exp_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField m_cost;
    private javax.swing.JTextField m_id;
    private javax.swing.JTextField m_id1;
    private javax.swing.JTextField m_name;
    private javax.swing.JTextField m_type;
    private javax.swing.JTextField mfg_date;
    private javax.swing.JTextField p_update;
    private javax.swing.JTextField q_update;
    private javax.swing.JButton reset;
    private javax.swing.JButton sample;
    private javax.swing.JTextArea status_final;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
